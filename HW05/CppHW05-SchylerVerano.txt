1. The problem with two-dimensional arrays in C/C++ is that they have fixed sizes and rigid memory layouts, which makes them inflexible and harder to manage for dynamic data. Since their size must be known at compile time  they can waste memory if over-allocated or cause errors if under-allocated.

2. One way to work around 2D array problems in C/C++ is flattening the array into a single 1D array and calculating indices manually. Another method is the Numerical Recipes trick, where a contiguous block of memory is allocated for all elements, and an array of pointers is set up to point to the start of each row. 